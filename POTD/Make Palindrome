//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution{
public:
    bool makePalindrome(int n,vector<string> &arr){
        // Code here
        unordered_map<string,int>m;
       for(int i=0;i<arr.size();i++)
       {
           m[arr[i]]++;
       }
       int c=0;
       for(int i=0;i<arr.size();i++)
       {
           reverse(arr[i].begin(),arr[i].end());
           m[arr[i]]-=1;
       }
       string a="";
       for(auto it:m)
       {if(it.second<0)
       c++;
       if(c>1)
       return false;
       if(it.second<1)
       a=it.first;
       }
       if(c==0)
       return true;
       string b=a;
       reverse(b.begin(),b.end());
       if(a==b)
       return true;
       return false;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<string> arr(n);
        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
        Solution ob;
        if(ob.makePalindrome(n,arr)) cout<<"YES"<<endl;
        else cout<<"NO"<<endl;
    }
    return 0;
}
// } Driver Code Ends
